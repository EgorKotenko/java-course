
package hw71;

/**
 * Класс "Калькулятор"
 * @author Егор
 */
public class Calc extends javax.swing.JFrame {

    /** Creates new form calc */
    public Calc() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button0 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        commaButton = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        plusButton = new javax.swing.JButton();
        minusButton = new javax.swing.JButton();
        multButton = new javax.swing.JButton();
        divButton = new javax.swing.JButton();
        equalsButton = new javax.swing.JButton();
        signButton = new javax.swing.JButton();
        sqrtButton = new javax.swing.JButton();
        bcspButtton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Amesome Calc v1.2");
        setLocationByPlatform(true);
        setResizable(false);

        button0.setForeground(new java.awt.Color(102, 102, 102));
        button0.setText("0");
        button0.setFocusPainted(false);
        button0.setFocusable(false);
        button0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button0ActionPerformed(evt);
            }
        });

        button1.setForeground(new java.awt.Color(102, 102, 102));
        button1.setText("1");
        button1.setFocusPainted(false);
        button1.setFocusable(false);
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button1ActionPerformed(evt);
            }
        });

        button2.setForeground(new java.awt.Color(102, 102, 102));
        button2.setText("2");
        button2.setFocusPainted(false);
        button2.setFocusable(false);
        button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button2ActionPerformed(evt);
            }
        });

        commaButton.setForeground(new java.awt.Color(102, 102, 102));
        commaButton.setText(",");
        commaButton.setFocusPainted(false);
        commaButton.setFocusable(false);
        commaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commaButtonActionPerformed(evt);
            }
        });

        button3.setForeground(new java.awt.Color(102, 102, 102));
        button3.setText("3");
        button3.setFocusPainted(false);
        button3.setFocusable(false);
        button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button3ActionPerformed(evt);
            }
        });

        button4.setForeground(new java.awt.Color(102, 102, 102));
        button4.setText("4");
        button4.setFocusPainted(false);
        button4.setFocusable(false);
        button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button4ActionPerformed(evt);
            }
        });

        button5.setForeground(new java.awt.Color(102, 102, 102));
        button5.setText("5");
        button5.setFocusPainted(false);
        button5.setFocusable(false);
        button5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button5ActionPerformed(evt);
            }
        });

        button6.setForeground(new java.awt.Color(102, 102, 102));
        button6.setText("6");
        button6.setFocusPainted(false);
        button6.setFocusable(false);
        button6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button6ActionPerformed(evt);
            }
        });

        button7.setForeground(new java.awt.Color(102, 102, 102));
        button7.setText("7");
        button7.setFocusPainted(false);
        button7.setFocusable(false);
        button7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button7ActionPerformed(evt);
            }
        });

        button8.setForeground(new java.awt.Color(102, 102, 102));
        button8.setText("8");
        button8.setFocusPainted(false);
        button8.setFocusable(false);
        button8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button8ActionPerformed(evt);
            }
        });

        button9.setForeground(new java.awt.Color(102, 102, 102));
        button9.setText("9");
        button9.setFocusPainted(false);
        button9.setFocusable(false);
        button9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button9ActionPerformed(evt);
            }
        });

        plusButton.setForeground(new java.awt.Color(0, 102, 102));
        plusButton.setText("+");
        plusButton.setFocusPainted(false);
        plusButton.setFocusable(false);
        plusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusButtonActionPerformed(evt);
            }
        });

        minusButton.setForeground(new java.awt.Color(0, 102, 102));
        minusButton.setText("−");
        minusButton.setFocusPainted(false);
        minusButton.setFocusable(false);
        minusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusButtonActionPerformed(evt);
            }
        });

        multButton.setForeground(new java.awt.Color(0, 102, 102));
        multButton.setText("*");
        multButton.setFocusPainted(false);
        multButton.setFocusable(false);
        multButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multButtonActionPerformed(evt);
            }
        });

        divButton.setForeground(new java.awt.Color(0, 102, 102));
        divButton.setText("/");
        divButton.setFocusPainted(false);
        divButton.setFocusable(false);
        divButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divButtonActionPerformed(evt);
            }
        });

        equalsButton.setFont(new java.awt.Font("Tahoma", 1, 11));
        equalsButton.setForeground(new java.awt.Color(0, 102, 102));
        equalsButton.setText("=");
        equalsButton.setFocusPainted(false);
        equalsButton.setFocusable(false);
        equalsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsButtonActionPerformed(evt);
            }
        });

        signButton.setForeground(new java.awt.Color(0, 102, 102));
        signButton.setText("±");
        signButton.setFocusPainted(false);
        signButton.setFocusable(false);
        signButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signButtonActionPerformed(evt);
            }
        });

        sqrtButton.setForeground(new java.awt.Color(0, 102, 102));
        sqrtButton.setText("√");
        sqrtButton.setFocusPainted(false);
        sqrtButton.setFocusable(false);
        sqrtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtButtonActionPerformed(evt);
            }
        });

        bcspButtton.setForeground(new java.awt.Color(0, 102, 102));
        bcspButtton.setText("←");
        bcspButtton.setFocusPainted(false);
        bcspButtton.setFocusable(false);
        bcspButtton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcspButttonActionPerformed(evt);
            }
        });

        clearButton.setForeground(new java.awt.Color(0, 102, 102));
        clearButton.setText("C");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        clearButton.setFocusPainted(false);
        clearButton.setFocusable(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(236, 243, 244));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        label.setFont(new java.awt.Font("Times New Roman", 0, 24));
        label.setForeground(new java.awt.Color(102, 102, 102));
        label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label.setText(string);
        label.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        label.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 169, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button9, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button6, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(button0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(button1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(button2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(commaButton, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                                    .addComponent(button3, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plusButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(divButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(multButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                            .addComponent(minusButton, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(bcspButtton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(sqrtButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(signButton, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(equalsButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bcspButtton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sqrtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(divButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(multButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(signButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(button3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button0, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(commaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(equalsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Обработка ошибки.
     */
    private void error() {
        error = true;
        string = "Error!";
        showLabel();
        working = false;
        isDouble = false;
        isNegative = false;
        moreThenOneDigit = false;
    }

    /**
     * Обработка кнопки смены знака.
     */
    private void signButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signButtonActionPerformed
        if (error) {
            string = "0";
            error = false;
            showLabel();
        } else if ((string.length() <= n) && (string == null ? "0" != null : !string.equals("0"))) {
            if (isNegative) {
                int length = string.length();
                char[] a = string .toCharArray();
                string = "";
                for (int i = 1; i < length; i++)
                    string += a[i];
                isNegative = false;
            } else {
                String temp = "-";
                temp += string;
                isNegative = true;
                string = temp;
            }
            showLabel();
        }
    }//GEN-LAST:event_signButtonActionPerformed

    /**
     * Обработка ситуации, когда полученное число не влезает в экран калькулятора.
     */
    private void outOfBounds() {
        if (string.length() > n) {
            char[] a = string.toCharArray();
            string = "";
            for (int i = 0; i < n; i ++)
                string += a[i];
        }
    }

    /**
     * Подблок обработки кнопик извлечения квадратного корня.
     */
    private void sqrtBlock() {
        if (isNegative) {
            error();
        } else {
            float sqrt;
            if (isDouble)
                sqrt = (float)Math.pow(Double.parseDouble(string), 0.5);
            else
                sqrt = (float)Math.pow(Long.parseLong(string), 0.5);
            if (sqrt - (long)sqrt == 0) {
                string = (long)sqrt + "";
                isDouble = false;
            } else {
                string = sqrt + "";
                isDouble = true;                
            }
        }
        outOfBounds();
        showLabel();
    }

    /**
     * Обработка кнопки извлечения квадратного корня.
     */
    private void sqrtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtButtonActionPerformed
        if (error) {
            string = "0";
            error = false;
            working = false;
            showLabel();
        } else if (working) {
                float cur = operationResult(temporary, string, operation);
                if (cur - (long)cur == 0)
                    string = (long)cur + "";
                else
                    string = cur + "";
                working = false;
                sqrtBlock();    
        } else {
            sqrtBlock();
        }
        
    }//GEN-LAST:event_sqrtButtonActionPerformed

    /**
     * Обработка кнопки удаления последнего элемента.
     */
    private void bcspButttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcspButttonActionPerformed
        if (error) {
            string = "0";
            error = false;
            working = false;
            moreThenOneDigit = false;
        } else {
            int length = string.length();
            char[] a = string .toCharArray();
            if (length == 2 && a[0] == '-') {
                string = "0";
                isNegative = false;
                working = false;
                moreThenOneDigit = false;
            } else {
                if (a[length - 1] == '.')
                    isDouble = false;
                string = "";
                for (int i = 0; i < length - 1; i++)
                    string += a[i];
                if (string == null ? "" == null : string.equals("")) {
                    string = "0";
                    working = false;
                    moreThenOneDigit = false;
                }
            }
        }
        showLabel();
    }//GEN-LAST:event_bcspButttonActionPerformed

    /**
     * Обработка кнопки сброса.
     */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        string = "0";
        isDouble = false;
        isNegative = false;
        working = false;
        moreThenOneDigit = false;
        showLabel();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * Обработка кнопки добавления плавающей точки.
     */
    private void commaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commaButtonActionPerformed
        if (error) {
            string = "0";
            error = false;
            showLabel();
        } else {
            if (string.length() <= n) {
                if (!isDouble) {
                    string += '.';
                    isDouble = true;
                    showLabel();                  
                }
            }
        }
    }//GEN-LAST:event_commaButtonActionPerformed

    private void button5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button5ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '5';
                else {               
                    string = "5";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '5';
            showLabel();
        }
    }//GEN-LAST:event_button5ActionPerformed

    private void button0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button0ActionPerformed
        if (string.length() <= n) {
            if ((error) || (working)){
                if (moreThenOneDigit)
                    string += '0';
                else {
                    string = "0";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else if (string == null ? "0" != null : !string.equals("0"))
                string += '0';
            showLabel();
        }
    }//GEN-LAST:event_button0ActionPerformed

    private void button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button1ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '1';
                else {
                    string = "1";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '1';
            showLabel();
        }
    }//GEN-LAST:event_button1ActionPerformed

    private void button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button2ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '2';
                else {
                    string = "2";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '2';
            showLabel();
        }
    }//GEN-LAST:event_button2ActionPerformed

    private void button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button3ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '3';
                else {
                    string = "3";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '3';
            showLabel();
        }
    }//GEN-LAST:event_button3ActionPerformed

    private void button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button4ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '4';
                else {
                    string = "4";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '4';
            showLabel();
        }
    }//GEN-LAST:event_button4ActionPerformed

    private void button6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button6ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '6';
                else {
                    string = "6";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '6';
            showLabel();
        }
    }//GEN-LAST:event_button6ActionPerformed

    private void button7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button7ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '7';
                else {
                    string = "7";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '7';
            showLabel();
        }
    }//GEN-LAST:event_button7ActionPerformed

    private void button8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button8ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '8';
                else {
                    string = "8";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '8';
            showLabel();
        }
    }//GEN-LAST:event_button8ActionPerformed

    private void button9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button9ActionPerformed
        if (string.length() <= n) {
            if ((string == null ? "0" == null : string.equals("0")) || (error) || (working)) {
                if (moreThenOneDigit)
                    string += '9';
                else {
                    string = "9";
                    error = false;
                    if (working)
                        moreThenOneDigit = true;
                }
            } else
                string += '9';
            showLabel();
        }
}//GEN-LAST:event_button9ActionPerformed

    /**
     * Обработка кнопки равенства.
     */
    private void equalsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsButtonActionPerformed
        float cur = operationResult(temporary, string, operation);
        if (cur == 100500) {
                error = true;
                string = "Error!";
                showLabel();
                working = false;
                moreThenOneDigit = false;
                isDouble = false;
                isNegative = false;
        } else {
            if (cur - (long)cur == 0)
                string = (long)cur + "";
            else {
                string = cur + "";
                isDouble = true;
            }
            outOfBounds();
            showLabel();
            working = false;
            moreThenOneDigit = false;
        }
    }//GEN-LAST:event_equalsButtonActionPerformed

    /**
     * Обработка кнопки сложения.
     */
    private void plusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusButtonActionPerformed
        if (working) {      
            float cur = operationResult(temporary, string, operation);
            if (cur - (long)cur == 0)
                string = (long)cur + "";
            else
                string = cur + "";
            outOfBounds();
            temporary = string;
            showLabel();
            operation = '+';
            moreThenOneDigit = false;
        } else {
            working = true;
            operation = '+';
            temporary = string;
        }
        isDouble = false;
    }//GEN-LAST:event_plusButtonActionPerformed

    /**
     * Обработка кнопки вычитания.
     */
    private void minusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusButtonActionPerformed
        if (working) {
            float cur = operationResult(temporary, string, operation);
            if (cur - (long)cur == 0)
                string = (long)cur + "";
            else
                string = cur + "";
            outOfBounds();
            temporary = string;
            showLabel();
            operation = '-';
            moreThenOneDigit = false;
        } else {
            working = true;
            operation = '-';
            temporary = string;
        }
        isDouble = false;
    }//GEN-LAST:event_minusButtonActionPerformed

    /**
     * Обработка кнопки умножения.
     */
    private void multButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multButtonActionPerformed
        if (working) {
            float cur = operationResult(temporary, string, operation);
            if (cur - (long)cur == 0)
                string = (long)cur + "";
            else
                string = cur + "";
            outOfBounds();
            temporary = string;
            showLabel();
            operation = '*';
            moreThenOneDigit = false;
        } else {
            working = true;
            operation = '*';
            temporary = string;
        }
        isDouble = false;
    }//GEN-LAST:event_multButtonActionPerformed

    /**
     * Обработка кнопки деления.
     */
    private void divButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divButtonActionPerformed
        if (working) {
            float cur = operationResult(temporary, string, operation);
            if (cur == 100500) {
                error();
            } else {
                if (cur - (long)cur == 0)
                    string = (long)cur + "";
                else
                    string = cur + "";
                outOfBounds();
                temporary = string;
                showLabel();
                operation = '/';
                moreThenOneDigit = false;
            }
        } else {
            working = true;
            operation = '/';
            temporary = string;
        }
        isDouble = false;
    }//GEN-LAST:event_divButtonActionPerformed

    /**
     * Получения результата действия по двум строкам с числами и знаку операции.
     * @param s1 Первое число (в виде строки)
     * @param s2 Второе число (в виде строки)
     * @param c Знак операции.
     */
    private float operationResult(String s1, String s2, char c) {
        if (c == '+')
            return Float.parseFloat(s1) + Float.parseFloat(s2);
        else if (c == '-')
            return Float.parseFloat(s1) - Float.parseFloat(s2);
        else if (c == '*')
            return Float.parseFloat(s1) * Float.parseFloat(s2);
        else if (c == '/'){
            if (Float.parseFloat(s2) == 0) {
                return 100500;
            } else
                return Float.parseFloat(s1) / Float.parseFloat(s2);
        } else return 0;
    }

    /**
     * Прорисовка экрана калькулятора.
     */
    private void showLabel() {
        label.setText(string);
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );
    }

    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcspButtton;
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton commaButton;
    private javax.swing.JButton divButton;
    private javax.swing.JButton equalsButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel label;
    private javax.swing.JButton minusButton;
    private javax.swing.JButton multButton;
    private javax.swing.JButton plusButton;
    private javax.swing.JButton signButton;
    private javax.swing.JButton sqrtButton;
    // End of variables declaration//GEN-END:variables

    private String string = "0";
    private String temporary = "0";
    private boolean isDouble = false;
    private boolean isNegative = false;
    private boolean error = false;
    private final int n = 13;
    private float number = 0;
    private char operation;
    private boolean working = false;
    private boolean moreThenOneDigit = false;

    

}
